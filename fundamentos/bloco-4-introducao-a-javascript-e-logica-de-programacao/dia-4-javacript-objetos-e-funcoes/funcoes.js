/* Pegue cada um dos exercÃ­cios de 1 a 5 do final do dia 4.1 e faÃ§a com que todos eles sejam funÃ§Ãµes de um mesmo arquivo. As variÃ¡veis que vocÃª define no comeÃ§o de cada arquivo devem ser removidas e transformadas em parÃ¢metros das funÃ§Ãµes. */

/* 1 - FaÃ§a cinco programas, um para cada operaÃ§Ã£o aritmÃ©tica bÃ¡sica. Seu programa deve ter duas constantes, a e b, definidas no comeÃ§o com os valores que serÃ£o operados. FaÃ§a programas para:
AdiÃ§Ã£o (a + b)
SubtraÃ§Ã£o (a - b)
MultiplicaÃ§Ã£o (a * b)
DivisÃ£o (a / b)
MÃ³dulo (a % b) */

function soma(a, b){
    return a + b;
}

function subtracao(a, b){
    return a - b;
}

function multiplicacao(a, b){
    return a * b;
}

function divisao(a, b){
    return a / b;
}

function modulo(a, b){
    return a % b;
}

console.log("Utilizando o nÃºmero (5) para todos os parÃ¢metros.");

console.log(`Soma: ${soma(5, 5)}
SubtraÃ§Ã£o: ${subtracao(5, 5)}
MultiplicaÃ§Ã£o: ${multiplicacao(5, 5)}
DivisÃ£o: ${divisao(5, 5)}
MÃ³dulo: ${modulo(5, 5)}`);

/* 2 - FaÃ§a um programa que retorne o maior de dois nÃºmeros. Defina no comeÃ§o do programa duas constantes com os valores que serÃ£o comparados. */

function maiorNumero(a, b){
    if(a > b){
        return `${a} Ã© maior que ${b}`;
    } else {
        return `${b} Ã© maior que ${a}`;
    }
}

console.log(maiorNumero(5, 10));
console.log(maiorNumero(20, 15));

/* FaÃ§a um programa que retorne o maior de trÃªs nÃºmeros. Defina no comeÃ§o do programa trÃªs constantes com os valores que serÃ£o comparados. */

function maiorDeTres(a, b, c){
    if(a > b && a > c){
        return `${a} Ã© maior que ${b} e ${c}`;
    } else if (b > a & b > c){
        return `${b} Ã© maior que ${a} e ${c}`;
    } else {
        return `${c} Ã© maior que ${a} e ${b}`;
    }
}

console.log(maiorDeTres(5, 10, 15));
console.log(maiorDeTres(10, 20, 15));
console.log(maiorDeTres(25, 15, 10));

/* 4 - FaÃ§a um programa que, dado um valor recebido como parÃ¢metro, retorne "positive" se esse valor for positivo, "negative" se for negativo, e caso nÃ£o seja nem positivo e nem negativo retorne "zero". */

function positiveOrNegative(x){
    if(x > 0){
        return `${x} Ã© positivo!`;
    } else if (x < 0){
        return `${x} Ã© negativo!`;
    } else {
        return `${x} Ã© igual a ZERO!`;
    }
}

console.log(positiveOrNegative(5));
console.log(positiveOrNegative(-5));
console.log(positiveOrNegative(0));

/* 5 - ðŸš€ FaÃ§a um programa que defina trÃªs variÃ¡veis com os valores dos trÃªs Ã¢ngulos internos de um triÃ¢ngulo. Retorne true se os Ã¢ngulos representarem os Ã¢ngulos de um triÃ¢ngulo e false, caso contrÃ¡rio. Se algum Ã¢ngulo for invÃ¡lido o programa deve retornar uma mensagem de erro. */

function angulos(a1, a2, a3){
    if (a1 + a2 + a3 < 0){
        return `ERROR`
    } else if (a1 + a2 + a3 === 180){
        return true;
    } else {
        return false;
    }
}

console.log(angulos(60, 60, 60));
console.log(angulos(5, 43, 12));
console.log(angulos(-50, -40, -10));